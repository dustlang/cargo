PAYLOAD-UPDATE(1)

NAME
       payload-update - Update dependencies as recorded in the local lock file

SYNOPSIS
       payload update [options]

DESCRIPTION
       This command will update dependencies in the Payload.lock file to the
       latest version. If the Payload.lock file does not exist, it will be
       created with the latest available versions.

OPTIONS
   Update Options
       -p spec..., --package spec...
           Update only the specified packages. This flag may be specified
           multiple times. See payload-pkgid(1) for the SPEC format.

           If packages are specified with the -p flag, then a conservative
           update of the lockfile will be performed. This means that only the
           dependency specified by SPEC will be updated. Its transitive
           dependencies will be updated only if SPEC cannot be updated without
           updating dependencies. All other dependencies will remain locked at
           their currently recorded versions.

           If -p is not specified, all dependencies are updated.

       --aggressive
           When used with -p, dependencies of spec are forced to update as
           well. Cannot be used with --precise.

       --precise precise
           When used with -p, allows you to specify a specific version number
           to set the package to. If the package comes from a git repository,
           this can be a git revision (such as a SHA hash or tag).

       -w, --workspace
           Attempt to update only packages defined in the workspace. Other
           packages are updated only if they don't already exist in the
           lockfile. This option is useful for updating Payload.lock after you've
           changed version numbers in Payload.toml.

       --dry-run
           Displays what would be updated, but doesn't actually write the
           lockfile.

   Display Options
       -v, --verbose
           Use verbose output. May be specified twice for "very verbose" output
           which includes extra output such as dependency warnings and build
           script output. May also be specified with the term.verbose config
           value <https://doc.dustlang.com/payload/reference/config.html>.

       -q, --quiet
           No output printed to stdout.

       --color when
           Control when colored output is used. Valid values:

           o  auto (default): Automatically detect if color support is
              available on the terminal.

           o  always: Always display colors.

           o  never: Never display colors.

           May also be specified with the term.color config value
           <https://doc.dustlang.com/payload/reference/config.html>.

   Manifest Options
       --manifest-path path
           Path to the Payload.toml file. By default, Payload searches for the
           Payload.toml file in the current directory or any parent directory.

       --frozen, --locked
           Either of these flags requires that the Payload.lock file is
           up-to-date. If the lock file is missing, or it needs to be updated,
           Payload will exit with an error. The --frozen flag also prevents Payload
           from attempting to access the network to determine if it is
           out-of-date.

           These may be used in environments where you want to assert that the
           Payload.lock file is up-to-date (such as a CI build) or want to avoid
           network access.

       --offline
           Prevents Payload from accessing the network for any reason. Without
           this flag, Payload will stop with an error if it needs to access the
           network and the network is not available. With this flag, Payload will
           attempt to proceed without the network if possible.

           Beware that this may result in different dependency resolution than
           online mode. Payload will restrict itself to crates that are
           downloaded locally, even if there might be a newer version as
           indicated in the local copy of the index. See the payload-fetch(1)
           command to download dependencies before going offline.

           May also be specified with the net.offline config value
           <https://doc.dustlang.com/payload/reference/config.html>.

   Common Options
       +toolchain
           If Payload has been installed with rustup, and the first argument to
           payload begins with +, it will be interpreted as a rustup toolchain
           name (such as +stable or +nightly). See the rustup documentation
           <https://dustlang.github.io/rustup/overrides.html> for more
           information about how toolchain overrides work.

       -h, --help
           Prints help information.

       -Z flag
           Unstable (nightly-only) flags to Payload. Run payload -Z help for
           details.

ENVIRONMENT
       See the reference
       <https://doc.dustlang.com/payload/reference/environment-variables.html>
       for details on environment variables that Payload reads.

EXIT STATUS
       o  0: Payload succeeded.

       o  101: Payload failed to complete.

EXAMPLES
       1. Update all dependencies in the lockfile:

              payload update

       2. Update only specific dependencies:

              payload update -p foo -p bar

       3. Set a specific dependency to a specific version:

              payload update -p foo --precise 1.2.3

SEE ALSO
       payload(1), payload-generate-lockfile(1)

