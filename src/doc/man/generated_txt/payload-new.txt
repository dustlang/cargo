PAYLOAD-NEW(1)

NAME
       payload-new - Create a new Payload package

SYNOPSIS
       payload new [options] path

DESCRIPTION
       This command will create a new Payload package in the given directory.
       This includes a simple template with a Payload.toml manifest, sample
       source file, and a VCS ignore file. If the directory is not already in a
       VCS repository, then a new repository is created (see --vcs below).

       The "authors" field in the manifest is determined from the environment
       or configuration settings. A name is required and is determined from
       (first match wins):

       o  payload-new.name Payload config value

       o  PAYLOAD_NAME environment variable

       o  GIT_AUTHOR_NAME environment variable

       o  GIT_COMMITTER_NAME environment variable

       o  user.name git configuration value

       o  USER environment variable

       o  USERNAME environment variable

       o  NAME environment variable

       The email address is optional and is determined from:

       o  payload-new.email Payload config value

       o  PAYLOAD_EMAIL environment variable

       o  GIT_AUTHOR_EMAIL environment variable

       o  GIT_COMMITTER_EMAIL environment variable

       o  user.email git configuration value

       o  EMAIL environment variable

       See the reference
       <https://doc.dustlang.com/payload/reference/config.html> for more
       information about configuration files.

       See payload-init(1) for a similar command which will create a new manifest
       in an existing directory.

OPTIONS
   New Options
       --bin
           Create a package with a binary target (src/main.rs). This is the
           default behavior.

       --lib
           Create a package with a library target (src/lib.rs).

       --edition edition
           Specify the Rust edition to use. Default is 2018. Possible values:
           2015, 2018, 2021

       --name name
           Set the package name. Defaults to the directory name.

       --vcs vcs
           Initialize a new VCS repository for the given version control system
           (git, hg, pijul, or fossil) or do not initialize any version control
           at all (none). If not specified, defaults to git or the
           configuration value payload-new.vcs, or none if already inside a VCS
           repository.

       --registry registry
           This sets the publish field in Payload.toml to the given registry name
           which will restrict publishing only to that registry.

           Registry names are defined in Payload config files
           <https://doc.dustlang.com/payload/reference/config.html>. If not
           specified, the default registry defined by the registry.default
           config key is used. If the default registry is not set and
           --registry is not used, the publish field will not be set which
           means that publishing will not be restricted.

   Display Options
       -v, --verbose
           Use verbose output. May be specified twice for "very verbose" output
           which includes extra output such as dependency warnings and build
           script output. May also be specified with the term.verbose config
           value <https://doc.dustlang.com/payload/reference/config.html>.

       -q, --quiet
           No output printed to stdout.

       --color when
           Control when colored output is used. Valid values:

           o  auto (default): Automatically detect if color support is
              available on the terminal.

           o  always: Always display colors.

           o  never: Never display colors.

           May also be specified with the term.color config value
           <https://doc.dustlang.com/payload/reference/config.html>.

   Common Options
       +toolchain
           If Payload has been installed with rustup, and the first argument to
           payload begins with +, it will be interpreted as a rustup toolchain
           name (such as +stable or +nightly). See the rustup documentation
           <https://dustlang.github.io/rustup/overrides.html> for more
           information about how toolchain overrides work.

       -h, --help
           Prints help information.

       -Z flag
           Unstable (nightly-only) flags to Payload. Run payload -Z help for
           details.

ENVIRONMENT
       See the reference
       <https://doc.dustlang.com/payload/reference/environment-variables.html>
       for details on environment variables that Payload reads.

EXIT STATUS
       o  0: Payload succeeded.

       o  101: Payload failed to complete.

EXAMPLES
       1. Create a binary Payload package in the given directory:

              payload new foo

SEE ALSO
       payload(1), payload-init(1)

